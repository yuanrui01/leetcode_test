package com.yuanrui.leetcode;

import java.util.Arrays;

/**
 * 976. 三角形的最大周长
 */
public class LargestPerimeter {

    public static void main(String[] args) {
        int[] nums = {4,14,73,97,80,58,12,2,2,77,98,89,26,40,49,62,65,18,9,98,10,57,27,92,28,91,93,45,42,435,41,98,30,43,19,21,88,97,4,94,22,27,28,76,20,68,15,88,77,74,74,39,64,15,6,91,15,74,72,70,51,15,67,68,89,65,81,82,44,75,17,81,83,68,62,81,21,2,70,97,74,11,3,22,7,92,7,1,60,94,91,73,72,85,67,66,35,54215,9,53,25,83,17,9,89,18,14,32,55,37,46,97,16,31,1148,19,57,12,93,69,10,28,79,78,90,25,9,10,29,28,47,48,40,1,50,64,70,96,70,75,74,87,24,22,2,23,27,17,63,60,3,67,16,5,72,68,32,79,45,91,8,81,85,72,100,97,32,5,12788,17,52,15,1,60,79,44,20,81,76,55,18,265,20,2,48,30,49,62,36,49,14,30,64,18,97,38,38,51,100,33,88,27,92,18,87,22,92,64,21,50,31,23,88,78,97,21,12,95,3,40,11,46,34,86,94,55,80,57,29,92,80,37,76,47,24,19,42,99,30,23,51,83,23,30,71,35,94,90,65,83,77,47,25,9,6,100,73,68,70,82,12,53,8,37,63,50,88,79,14,54,29,27,69,100,47,53,53,85,97,55,89,1,30,50,68,100,73,30,83,40,60,7,54,100,31,21,73,98,30,85,79,63,16,66,27,26,26,35,40,87,6,34,66,6,40,40,92,11,41,35,4,17,25,59,86,88,23,84,36,21,80,75,58,8,30,17,13,44,75,46,16,75,23,47,38,68,22,37,66,92,39,43,42,95,55,43,7,49,92,20699,58,53,25,64,75,45,94,53,16,25,77,43,39,66,5,36,67,92,8,51,7,37,29,24,62,25,65,6,6,87,88,62,76,71,4876,79,15,81,33,93,77,35,30,94,48,89,61,98,3,81,3,43,69,47,80,80,58,18,41,94,7,4,98,14,7,61,85,23,10,27,39,90,100,61,24,89,48,92,88,1,67,91,53,50,2,24,5,60,33,87,65,74,72,12,93,25,12,76,49,85,94,34,1857,47,100,47,30,27,61,40,34,32,40,91,97,62,45,87712,27,6,17,76,7,21,1,15,6,61,35,45,82,28,19,75,1,92,47,50,2,32,92,20,48,92,61,45,67,69,32,16,27,39,34,73,27,85,35,72,52,73,62,23,58,41,28,58,75,70,2,33,41,25,34,39,24,83,25,50,62,92,29,99,65,24,36,75,57,35,56,29,69,90,55,71,29,90,44,11,73,78,70,87,34,65,27,33,7,91,81,85,85,61,93,29,87,14,33496,87,54,83,64,77,39,63,39,33,46,77,23,13,96,24,95,601290,44,74,10,72,60,72,53,84,82,3,17,56,87,56,38,50,14,91,5,24,8,7,4,35,91,34,44,68,17,82,6,98,100,100,18,5,82,3,706,47,63,42,35,12,16,13,76,75,80,82,42,141934,94,60,27,89,4,74,43,8,5,9,42,10,17,56,93,27,32,41,37,10,48,37,81,77,18,98,15,90,21,17,93,82,92,20,80,19,3,39,80,13,65,43,76,85,92,73,14,44,93,42,61,95,50,37,71,37,46,18,79,371611,51,40,56,62,4,3015,66,30,60,21,53,72,1,80,33,24,77,58,78,26,71,79,73,4,37,90,70,8,94,63,29,35,21,54,39,8,86,45,54,73,61,59,19,46,96,79,31,95,52,92,48,34,43,41,33,33,52,83,83,5,54,10,64,24,40,972911,70,161,99,45,97,229662,77,87,65,60,70,48,17,29,45,44,83,52,56,100,52,94,73,74,46,2,37,81,26,23,93,89,41,69,2,67,66,23,79,70,5,21,7,71,91,33,69,57,25,17,55,6,9,13,60,72,57,66,26,84,56,1,96,59,75,15,61,18,76,68,23,59,40,23,41,53,20,81,6,98,91,81,62,11,39,21,7,7902,90,93,54,39,92,31,100,4,33,73,60,49,2,9,28,49,96,30,68,49,80,33,39,91,89,99,5,83,60,34,24,5,38,72,16,29,38,25,21,66,99,19,17,95,93,89,2,73,33,34,98,17,49,48,29,86,70,82,26,78,72,6,67,98,49,17,20,46,83,37,79,25,52,47,34,19,29,76,87,51,86,36,16,4,58,88,56,69,90,45,17,42,99,34,75,79,24,80,49,45,97,38,81,5,65,56,36,63,44,55,89,15,7,34,72,47,62,32,44,50,22,34,65,68,67,69,31,13,14,19,25,83,48,61,43,67,64,56,44,91};
        //System.out.println(largestPerimeter(nums));
        Arrays.sort(nums);
        System.out.println(Arrays.toString(nums));
    }

    public int largestPerimeter(int[] nums) {
        Arrays.sort(nums);
        for (int i = nums.length - 3; i >= 0; --i)
            if (nums[i] + nums[i+1] > nums[i+2])
                return nums[i] + nums[i+1] + nums[i+2];
        return 0;
    }
}
